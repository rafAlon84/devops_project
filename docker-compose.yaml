services:

  weather_app:
    build: 
      context: .
      dockerfile: docker/Dockerfile.app
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks: 
      - weather_net

  nginx-lb:
    build: 
      context: .
      dockerfile: docker/Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - weather_app
    networks:
      - weather_net

  telegraf-nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.telegraf
    user: root
    entrypoint: "telegraf"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - telegraf_volume:/etc/telegraf:ro
    depends_on:
      - nginx-lb
    networks:
      - weather_net
  
  prometheus-nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_volume:/etc/prometheus
    depends_on:
      - telegraf-nginx
    networks:
      - weather_net

  grafana-metrics:
    build:
      context: .
      dockerfile: docker/Dockerfile.grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus-nginx
    networks:
      - weather_net

volumes:
  telegraf_volume:
    driver: local
  prometheus_volume:
    driver: local

networks:
  weather_net:
    driver: overlay